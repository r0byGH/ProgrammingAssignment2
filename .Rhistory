ls()
pwd()
getwd()
find.package("devtools")
find.package("tools")
install.packages("devtools")
library("devtools", lib.loc="C:/Users/r0by/Documents/R/win-library/3.1")
find.package("tools")
find.package("devtools")
library(devtools)
ls()
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
ls()
ls(package:KernSmooth)
ls(package:devtools)
ls("package:devtools"")
""
ls("package:devtools")
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f(3)
z<-10
z
f(3)
f <- function(x) {
+     g <- function(y) {
+         y + z
+     }
+     x <- 3
+     x + g(x)
+ }
f <- function(x) {
+     g <- function(y) {
+         y + z
+     }
+     z <- 4
+     x + g(x)
+ }
f
function(x) {
g <- function(y) {
y + z
}
x <- 3
x + g(x)
}
f
f <- function(x) {
g <- function(y) {
y + z
}
x <- 3
x + g(x)
}
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
x
y
clear
clear()
clean()
d = 3L
d
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
setwd("I:/Personal - education/2014 - coursera - R Programming/ProgrammingAssignment2")
ls
ls()
dir()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
a <- c(1,2,3,4)
cachemean(a)
b <- makeVector(a)
cachemean(b)
ls()
use
library
library("cachematrix.R")
source("cachematrix.R")
ls()
m <- matrix(c(0,0,1,0,1,0,1,0,0),3,3)
m
n <- makeCacheMatrix(m)
cacheSolve(n)
source("cachematrix.R")
cacheSolve(n)
m %% cachesolve(n)
m %% cacheSolve(n)
m
cachesolve(n)
cacheSolve(n)
m %*% cacheSolve(n)
m <- matrix(c(1,1,1,0,1,4,1,0,0),3,3)
n <- makeCacheMatrix(m)
m %*% cacheSolve(n)
m
cacheSolve(n)
m %*% cacheSolve(n)
length("88d91e252937b10c2206f2d9cec373ca61540ca2")
str_length("88d91e252937b10c2206f2d9cec373ca61540ca2")
string::str_length("88d91e252937b10c2206f2d9cec373ca61540ca2")
stringr::str_length("88d91e252937b10c2206f2d9cec373ca61540ca2")
